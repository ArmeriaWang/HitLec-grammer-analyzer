Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: TOP_STATEMENTS

    2 TOP_STATEMENTS: STATEMENT_VAR_DEF TOP_STATEMENTS
    3               | STATEMENT_FUNC_DEF TOP_STATEMENTS
    4               | STATEMENT_STRUCT_DEF TOP_STATEMENTS
    5               | %empty

    6 STATEMENTS_BLOCK: BEGIN STATEMENTS END
    7                 | BEGIN END

    8 STATEMENTS: STATEMENT STATEMENTS
    9           | STATEMENT

   10 STATEMENT: STATEMENT_VAR_DEF
   11          | STATEMENT_ASSIGN
   12          | STATEMENT_IF
   13          | STATEMENT_WHILE
   14          | STATEMENT_STRUCT_DEF
   15          | STATEMENT_RETURN
   16          | FUNC_CALL SEMICOLON
   17          | SEMICOLON

   18 EXP_R: EXP_R LT EXP_R
   19      | EXP_R LE EXP_R
   20      | EXP_R GT EXP_R
   21      | EXP_R GE EXP_R
   22      | EXP_R NE EXP_R
   23      | EXP_R EQ EXP_R
   24      | EXP_R PLUS EXP_R
   25      | EXP_R MINUS EXP_R
   26      | EXP_R STAR EXP_R
   27      | EXP_R DIVIDE EXP_R
   28      | EXP_R MOD EXP_R
   29      | EXP_R LOR EXP_R
   30      | EXP_R LAND EXP_R
   31      | EXP_R BOR EXP_R
   32      | EXP_R BXOR EXP_R
   33      | EXP_R APSAND EXP_R
   34      | PLUS EXP_R
   35      | MINUS EXP_R
   36      | ROUND_LEFT EXP_R ROUND_RIGHT
   37      | EXP_L
   38      | APSAND EXP_L
   39      | CONST_STRING
   40      | NUMBER
   41      | FUNC_CALL

   42 EXP_L: ID
   43      | ID DOT EXP_L
   44      | HD_ARRAY
   45      | HD_ARRAY DOT EXP_L

   46 HD_ARRAY: ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM

   47 MORE_ARRAY_DIM: SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   48               | %empty

   49 NUMBER: CONST_INTEGER
   50       | CONST_BOOLEAN
   51       | CONST_FLOAT

   52 STATEMENT_IF: IF ROUND_LEFT EXP_R ROUND_RIGHT STATEMENTS_BLOCK STATEMENT_ELSE

   53 STATEMENT_ELSE: ELSE STATEMENTS_BLOCK
   54               | ELSE STATEMENT_IF
   55               | %empty

   56 STATEMENT_WHILE: WHILE ROUND_LEFT EXP_R ROUND_RIGHT WHILE_BODY

   57 WHILE_BODY: STATEMENTS_BLOCK
   58           | STATEMENT

   59 STATEMENT_VAR_DEF: VAR_DEF_TYPE DECLARE_INITIALIZE DECLARE_MORE
   60                  | VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE

   61 DECLARE_MORE: SEMICOLON
   62             | COMMA DECLARE_INITIALIZE DECLARE_MORE
   63             | COMMA DECLARE_NON_INITIALIZE DECLARE_MORE

   64 DECLARE_NON_INITIALIZE: ID
   65                       | STAR ID
   66                       | HD_ARRAY
   67                       | STAR HD_ARRAY

   68 DECLARE_INITIALIZE: ID ASSIGN EXP_R
   69                   | STAR ID ASSIGN EXP_R

   70 STATEMENT_ASSIGN: EXP_L ASSIGN EXP_R SEMICOLON

   71 STATEMENT_STRUCT_DEF: STRUCT ID BEGIN STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF END SEMICOLON

   72 MORE_STRUCT_MEMBER_DEF: STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF
   73                       | %empty

   74 STRUCT_MEMBER_DEF: VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE_NON_INITIALIZE SEMICOLON

   75 DECLARE_MORE_NON_INITIALIZE: COMMA DECLARE_NON_INITIALIZE DECLARE_MORE_NON_INITIALIZE
   76                            | %empty

   77 STATEMENT_RETURN: RETURN EXP_R SEMICOLON

   78 FUNC_CALL: ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | ID ROUND_LEFT ROUND_RIGHT

   80 SEND_FUNC_ARGS: COMMA EXP_R SEND_FUNC_ARGS
   81               | %empty

   82 STATEMENT_FUNC_DEF: FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT ROUND_RIGHT STATEMENTS_BLOCK
   83                   | FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS ROUND_RIGHT STATEMENTS_BLOCK

   84 RECV_FUNC_ARGS: COMMA SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS
   85               | %empty

   86 SINGLE_RECV_FUNC_ARG: FUNC_DEF_TYPE ID
   87                     | FUNC_DEF_TYPE RECV_HD_ARRAY

   88 RECV_HD_ARRAY: ID SQUARE_LEFT SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM
   89              | ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM

   90 MORE_RECV_HD_ARRAY_DIM: SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM
   91                       | %empty

   92 DT_STRUCT: STRUCT ID

   93 DT_POINTER: VAR_DEF_TYPE STAR

   94 VAR_DEF_TYPE: DT_INTEGER
   95             | DT_FLOAT
   96             | DT_BOOLEAN
   97             | DT_STRUCT

   98 FUNC_DEF_TYPE: DT_INTEGER
   99              | DT_FLOAT
  100              | DT_BOOLEAN
  101              | DT_POINTER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DT_INTEGER (258) 94 98
    DT_BOOLEAN (259) 96 100
    DT_FLOAT (260) 95 99
    STRUCT (261) 71 92
    WHILE (262) 56
    IF (263) 52
    ELSE (264) 53 54
    RETURN (265) 77
    FUNCTION (266) 82 83
    CONST_INTEGER (267) 49
    CONST_FLOAT (268) 51
    CONST_STRING (269) 39
    CONST_BOOLEAN (270) 50
    ID (271) 42 43 46 64 65 68 69 71 78 79 82 83 86 88 89 92
    SEMICOLON (272) 16 17 61 70 71 74 77
    COMMA (273) 62 63 75 80 84
    DOT (274) 43 45
    ROUND_LEFT (275) 36 52 56 78 79 82 83
    ROUND_RIGHT (276) 36 52 56 78 79 82 83
    SQUARE_LEFT (277) 46 47 88 89 90
    SQUARE_RIGHT (278) 46 47 88 89 90
    BEGIN (279) 6 7 71
    END (280) 6 7 71
    ASSIGN (281) 68 69 70
    LOR (282) 29
    LAND (283) 30
    BOR (284) 31
    BXOR (285) 32
    APSAND (286) 33 38
    EQ (287) 23
    NE (288) 22
    LE (289) 19
    GE (290) 21
    LT (291) 18
    GT (292) 20
    PLUS (293) 24 34
    MINUS (294) 25 35
    STAR (295) 26 65 67 69 93
    DIVIDE (296) 27
    MOD (297) 28
    GET_ADDR (298)
    POSITIVE (299)
    NEGATIVE (300)


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    PROGRAM (47)
        on left: 1
        on right: 0
    TOP_STATEMENTS (48)
        on left: 2 3 4 5
        on right: 1 2 3 4
    STATEMENTS_BLOCK (49)
        on left: 6 7
        on right: 52 53 57 82 83
    STATEMENTS (50)
        on left: 8 9
        on right: 6 8
    STATEMENT (51)
        on left: 10 11 12 13 14 15 16 17
        on right: 8 9 58
    EXP_R (52)
        on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
        on right: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 46 47 52 56 68 69 70 77 78 80 89 90
    EXP_L (53)
        on left: 42 43 44 45
        on right: 37 38 43 45 70
    HD_ARRAY (54)
        on left: 46
        on right: 44 45 66 67
    MORE_ARRAY_DIM (55)
        on left: 47 48
        on right: 46 47
    NUMBER (56)
        on left: 49 50 51
        on right: 40
    STATEMENT_IF (57)
        on left: 52
        on right: 12 54
    STATEMENT_ELSE (58)
        on left: 53 54 55
        on right: 52
    STATEMENT_WHILE (59)
        on left: 56
        on right: 13
    WHILE_BODY (60)
        on left: 57 58
        on right: 56
    STATEMENT_VAR_DEF (61)
        on left: 59 60
        on right: 2 10
    DECLARE_MORE (62)
        on left: 61 62 63
        on right: 59 60 62 63
    DECLARE_NON_INITIALIZE (63)
        on left: 64 65 66 67
        on right: 60 63 74 75
    DECLARE_INITIALIZE (64)
        on left: 68 69
        on right: 59 62
    STATEMENT_ASSIGN (65)
        on left: 70
        on right: 11
    STATEMENT_STRUCT_DEF (66)
        on left: 71
        on right: 4 14
    MORE_STRUCT_MEMBER_DEF (67)
        on left: 72 73
        on right: 71 72
    STRUCT_MEMBER_DEF (68)
        on left: 74
        on right: 71 72
    DECLARE_MORE_NON_INITIALIZE (69)
        on left: 75 76
        on right: 74 75
    STATEMENT_RETURN (70)
        on left: 77
        on right: 15
    FUNC_CALL (71)
        on left: 78 79
        on right: 16 41
    SEND_FUNC_ARGS (72)
        on left: 80 81
        on right: 78 80
    STATEMENT_FUNC_DEF (73)
        on left: 82 83
        on right: 3
    RECV_FUNC_ARGS (74)
        on left: 84 85
        on right: 83 84
    SINGLE_RECV_FUNC_ARG (75)
        on left: 86 87
        on right: 83 84
    RECV_HD_ARRAY (76)
        on left: 88 89
        on right: 87
    MORE_RECV_HD_ARRAY_DIM (77)
        on left: 90 91
        on right: 88 89 90
    DT_STRUCT (78)
        on left: 92
        on right: 97
    DT_POINTER (79)
        on left: 93
        on right: 101
    VAR_DEF_TYPE (80)
        on left: 94 95 96 97
        on right: 59 60 74 93
    FUNC_DEF_TYPE (81)
        on left: 98 99 100 101
        on right: 82 83 86 87


State 0

    0 $accept: • PROGRAM $end
    1 PROGRAM: • TOP_STATEMENTS
    2 TOP_STATEMENTS: • STATEMENT_VAR_DEF TOP_STATEMENTS
    3               | • STATEMENT_FUNC_DEF TOP_STATEMENTS
    4               | • STATEMENT_STRUCT_DEF TOP_STATEMENTS
    5               | • %empty  [$end]
   59 STATEMENT_VAR_DEF: • VAR_DEF_TYPE DECLARE_INITIALIZE DECLARE_MORE
   60                  | • VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE
   71 STATEMENT_STRUCT_DEF: • STRUCT ID BEGIN STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF END SEMICOLON
   82 STATEMENT_FUNC_DEF: • FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT ROUND_RIGHT STATEMENTS_BLOCK
   83                   | • FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS ROUND_RIGHT STATEMENTS_BLOCK
   92 DT_STRUCT: • STRUCT ID
   94 VAR_DEF_TYPE: • DT_INTEGER
   95             | • DT_FLOAT
   96             | • DT_BOOLEAN
   97             | • DT_STRUCT

    DT_INTEGER  shift, and go to state 1
    DT_BOOLEAN  shift, and go to state 2
    DT_FLOAT    shift, and go to state 3
    STRUCT      shift, and go to state 4
    FUNCTION    shift, and go to state 5

    $default  reduce using rule 5 (TOP_STATEMENTS)

    PROGRAM               go to state 6
    TOP_STATEMENTS        go to state 7
    STATEMENT_VAR_DEF     go to state 8
    STATEMENT_STRUCT_DEF  go to state 9
    STATEMENT_FUNC_DEF    go to state 10
    DT_STRUCT             go to state 11
    VAR_DEF_TYPE          go to state 12


State 1

   94 VAR_DEF_TYPE: DT_INTEGER •

    $default  reduce using rule 94 (VAR_DEF_TYPE)


State 2

   96 VAR_DEF_TYPE: DT_BOOLEAN •

    $default  reduce using rule 96 (VAR_DEF_TYPE)


State 3

   95 VAR_DEF_TYPE: DT_FLOAT •

    $default  reduce using rule 95 (VAR_DEF_TYPE)


State 4

   71 STATEMENT_STRUCT_DEF: STRUCT • ID BEGIN STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF END SEMICOLON
   92 DT_STRUCT: STRUCT • ID

    ID  shift, and go to state 13


State 5

   82 STATEMENT_FUNC_DEF: FUNCTION • FUNC_DEF_TYPE ID ROUND_LEFT ROUND_RIGHT STATEMENTS_BLOCK
   83                   | FUNCTION • FUNC_DEF_TYPE ID ROUND_LEFT SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS ROUND_RIGHT STATEMENTS_BLOCK
   92 DT_STRUCT: • STRUCT ID
   93 DT_POINTER: • VAR_DEF_TYPE STAR
   94 VAR_DEF_TYPE: • DT_INTEGER
   95             | • DT_FLOAT
   96             | • DT_BOOLEAN
   97             | • DT_STRUCT
   98 FUNC_DEF_TYPE: • DT_INTEGER
   99              | • DT_FLOAT
  100              | • DT_BOOLEAN
  101              | • DT_POINTER

    DT_INTEGER  shift, and go to state 14
    DT_BOOLEAN  shift, and go to state 15
    DT_FLOAT    shift, and go to state 16
    STRUCT      shift, and go to state 17

    DT_STRUCT      go to state 11
    DT_POINTER     go to state 18
    VAR_DEF_TYPE   go to state 19
    FUNC_DEF_TYPE  go to state 20


State 6

    0 $accept: PROGRAM • $end

    $end  shift, and go to state 21


State 7

    1 PROGRAM: TOP_STATEMENTS •

    $default  reduce using rule 1 (PROGRAM)


State 8

    2 TOP_STATEMENTS: • STATEMENT_VAR_DEF TOP_STATEMENTS
    2               | STATEMENT_VAR_DEF • TOP_STATEMENTS
    3               | • STATEMENT_FUNC_DEF TOP_STATEMENTS
    4               | • STATEMENT_STRUCT_DEF TOP_STATEMENTS
    5               | • %empty  [$end]
   59 STATEMENT_VAR_DEF: • VAR_DEF_TYPE DECLARE_INITIALIZE DECLARE_MORE
   60                  | • VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE
   71 STATEMENT_STRUCT_DEF: • STRUCT ID BEGIN STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF END SEMICOLON
   82 STATEMENT_FUNC_DEF: • FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT ROUND_RIGHT STATEMENTS_BLOCK
   83                   | • FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS ROUND_RIGHT STATEMENTS_BLOCK
   92 DT_STRUCT: • STRUCT ID
   94 VAR_DEF_TYPE: • DT_INTEGER
   95             | • DT_FLOAT
   96             | • DT_BOOLEAN
   97             | • DT_STRUCT

    DT_INTEGER  shift, and go to state 1
    DT_BOOLEAN  shift, and go to state 2
    DT_FLOAT    shift, and go to state 3
    STRUCT      shift, and go to state 4
    FUNCTION    shift, and go to state 5

    $default  reduce using rule 5 (TOP_STATEMENTS)

    TOP_STATEMENTS        go to state 22
    STATEMENT_VAR_DEF     go to state 8
    STATEMENT_STRUCT_DEF  go to state 9
    STATEMENT_FUNC_DEF    go to state 10
    DT_STRUCT             go to state 11
    VAR_DEF_TYPE          go to state 12


State 9

    2 TOP_STATEMENTS: • STATEMENT_VAR_DEF TOP_STATEMENTS
    3               | • STATEMENT_FUNC_DEF TOP_STATEMENTS
    4               | • STATEMENT_STRUCT_DEF TOP_STATEMENTS
    4               | STATEMENT_STRUCT_DEF • TOP_STATEMENTS
    5               | • %empty  [$end]
   59 STATEMENT_VAR_DEF: • VAR_DEF_TYPE DECLARE_INITIALIZE DECLARE_MORE
   60                  | • VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE
   71 STATEMENT_STRUCT_DEF: • STRUCT ID BEGIN STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF END SEMICOLON
   82 STATEMENT_FUNC_DEF: • FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT ROUND_RIGHT STATEMENTS_BLOCK
   83                   | • FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS ROUND_RIGHT STATEMENTS_BLOCK
   92 DT_STRUCT: • STRUCT ID
   94 VAR_DEF_TYPE: • DT_INTEGER
   95             | • DT_FLOAT
   96             | • DT_BOOLEAN
   97             | • DT_STRUCT

    DT_INTEGER  shift, and go to state 1
    DT_BOOLEAN  shift, and go to state 2
    DT_FLOAT    shift, and go to state 3
    STRUCT      shift, and go to state 4
    FUNCTION    shift, and go to state 5

    $default  reduce using rule 5 (TOP_STATEMENTS)

    TOP_STATEMENTS        go to state 23
    STATEMENT_VAR_DEF     go to state 8
    STATEMENT_STRUCT_DEF  go to state 9
    STATEMENT_FUNC_DEF    go to state 10
    DT_STRUCT             go to state 11
    VAR_DEF_TYPE          go to state 12


State 10

    2 TOP_STATEMENTS: • STATEMENT_VAR_DEF TOP_STATEMENTS
    3               | • STATEMENT_FUNC_DEF TOP_STATEMENTS
    3               | STATEMENT_FUNC_DEF • TOP_STATEMENTS
    4               | • STATEMENT_STRUCT_DEF TOP_STATEMENTS
    5               | • %empty  [$end]
   59 STATEMENT_VAR_DEF: • VAR_DEF_TYPE DECLARE_INITIALIZE DECLARE_MORE
   60                  | • VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE
   71 STATEMENT_STRUCT_DEF: • STRUCT ID BEGIN STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF END SEMICOLON
   82 STATEMENT_FUNC_DEF: • FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT ROUND_RIGHT STATEMENTS_BLOCK
   83                   | • FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS ROUND_RIGHT STATEMENTS_BLOCK
   92 DT_STRUCT: • STRUCT ID
   94 VAR_DEF_TYPE: • DT_INTEGER
   95             | • DT_FLOAT
   96             | • DT_BOOLEAN
   97             | • DT_STRUCT

    DT_INTEGER  shift, and go to state 1
    DT_BOOLEAN  shift, and go to state 2
    DT_FLOAT    shift, and go to state 3
    STRUCT      shift, and go to state 4
    FUNCTION    shift, and go to state 5

    $default  reduce using rule 5 (TOP_STATEMENTS)

    TOP_STATEMENTS        go to state 24
    STATEMENT_VAR_DEF     go to state 8
    STATEMENT_STRUCT_DEF  go to state 9
    STATEMENT_FUNC_DEF    go to state 10
    DT_STRUCT             go to state 11
    VAR_DEF_TYPE          go to state 12


State 11

   97 VAR_DEF_TYPE: DT_STRUCT •

    $default  reduce using rule 97 (VAR_DEF_TYPE)


State 12

   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   59 STATEMENT_VAR_DEF: VAR_DEF_TYPE • DECLARE_INITIALIZE DECLARE_MORE
   60                  | VAR_DEF_TYPE • DECLARE_NON_INITIALIZE DECLARE_MORE
   64 DECLARE_NON_INITIALIZE: • ID
   65                       | • STAR ID
   66                       | • HD_ARRAY
   67                       | • STAR HD_ARRAY
   68 DECLARE_INITIALIZE: • ID ASSIGN EXP_R
   69                   | • STAR ID ASSIGN EXP_R

    ID    shift, and go to state 25
    STAR  shift, and go to state 26

    HD_ARRAY                go to state 27
    DECLARE_NON_INITIALIZE  go to state 28
    DECLARE_INITIALIZE      go to state 29


State 13

   71 STATEMENT_STRUCT_DEF: STRUCT ID • BEGIN STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF END SEMICOLON
   92 DT_STRUCT: STRUCT ID •  [ID, STAR]

    BEGIN  shift, and go to state 30

    $default  reduce using rule 92 (DT_STRUCT)


State 14

   94 VAR_DEF_TYPE: DT_INTEGER •  [STAR]
   98 FUNC_DEF_TYPE: DT_INTEGER •  [ID]

    ID        reduce using rule 98 (FUNC_DEF_TYPE)
    $default  reduce using rule 94 (VAR_DEF_TYPE)


State 15

   96 VAR_DEF_TYPE: DT_BOOLEAN •  [STAR]
  100 FUNC_DEF_TYPE: DT_BOOLEAN •  [ID]

    ID        reduce using rule 100 (FUNC_DEF_TYPE)
    $default  reduce using rule 96 (VAR_DEF_TYPE)


State 16

   95 VAR_DEF_TYPE: DT_FLOAT •  [STAR]
   99 FUNC_DEF_TYPE: DT_FLOAT •  [ID]

    ID        reduce using rule 99 (FUNC_DEF_TYPE)
    $default  reduce using rule 95 (VAR_DEF_TYPE)


State 17

   92 DT_STRUCT: STRUCT • ID

    ID  shift, and go to state 31


State 18

  101 FUNC_DEF_TYPE: DT_POINTER •

    $default  reduce using rule 101 (FUNC_DEF_TYPE)


State 19

   93 DT_POINTER: VAR_DEF_TYPE • STAR

    STAR  shift, and go to state 32


State 20

   82 STATEMENT_FUNC_DEF: FUNCTION FUNC_DEF_TYPE • ID ROUND_LEFT ROUND_RIGHT STATEMENTS_BLOCK
   83                   | FUNCTION FUNC_DEF_TYPE • ID ROUND_LEFT SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS ROUND_RIGHT STATEMENTS_BLOCK

    ID  shift, and go to state 33


State 21

    0 $accept: PROGRAM $end •

    $default  accept


State 22

    2 TOP_STATEMENTS: STATEMENT_VAR_DEF TOP_STATEMENTS •

    $default  reduce using rule 2 (TOP_STATEMENTS)


State 23

    4 TOP_STATEMENTS: STATEMENT_STRUCT_DEF TOP_STATEMENTS •

    $default  reduce using rule 4 (TOP_STATEMENTS)


State 24

    3 TOP_STATEMENTS: STATEMENT_FUNC_DEF TOP_STATEMENTS •

    $default  reduce using rule 3 (TOP_STATEMENTS)


State 25

   46 HD_ARRAY: ID • SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   64 DECLARE_NON_INITIALIZE: ID •  [SEMICOLON, COMMA]
   68 DECLARE_INITIALIZE: ID • ASSIGN EXP_R

    SQUARE_LEFT  shift, and go to state 34
    ASSIGN       shift, and go to state 35

    $default  reduce using rule 64 (DECLARE_NON_INITIALIZE)


State 26

   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   65 DECLARE_NON_INITIALIZE: STAR • ID
   67                       | STAR • HD_ARRAY
   69 DECLARE_INITIALIZE: STAR • ID ASSIGN EXP_R

    ID  shift, and go to state 36

    HD_ARRAY  go to state 37


State 27

   66 DECLARE_NON_INITIALIZE: HD_ARRAY •

    $default  reduce using rule 66 (DECLARE_NON_INITIALIZE)


State 28

   60 STATEMENT_VAR_DEF: VAR_DEF_TYPE DECLARE_NON_INITIALIZE • DECLARE_MORE
   61 DECLARE_MORE: • SEMICOLON
   62             | • COMMA DECLARE_INITIALIZE DECLARE_MORE
   63             | • COMMA DECLARE_NON_INITIALIZE DECLARE_MORE

    SEMICOLON  shift, and go to state 38
    COMMA      shift, and go to state 39

    DECLARE_MORE  go to state 40


State 29

   59 STATEMENT_VAR_DEF: VAR_DEF_TYPE DECLARE_INITIALIZE • DECLARE_MORE
   61 DECLARE_MORE: • SEMICOLON
   62             | • COMMA DECLARE_INITIALIZE DECLARE_MORE
   63             | • COMMA DECLARE_NON_INITIALIZE DECLARE_MORE

    SEMICOLON  shift, and go to state 38
    COMMA      shift, and go to state 39

    DECLARE_MORE  go to state 41


State 30

   71 STATEMENT_STRUCT_DEF: STRUCT ID BEGIN • STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF END SEMICOLON
   74 STRUCT_MEMBER_DEF: • VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE_NON_INITIALIZE SEMICOLON
   92 DT_STRUCT: • STRUCT ID
   94 VAR_DEF_TYPE: • DT_INTEGER
   95             | • DT_FLOAT
   96             | • DT_BOOLEAN
   97             | • DT_STRUCT

    DT_INTEGER  shift, and go to state 1
    DT_BOOLEAN  shift, and go to state 2
    DT_FLOAT    shift, and go to state 3
    STRUCT      shift, and go to state 17

    STRUCT_MEMBER_DEF  go to state 42
    DT_STRUCT          go to state 11
    VAR_DEF_TYPE       go to state 43


State 31

   92 DT_STRUCT: STRUCT ID •

    $default  reduce using rule 92 (DT_STRUCT)


State 32

   93 DT_POINTER: VAR_DEF_TYPE STAR •

    $default  reduce using rule 93 (DT_POINTER)


State 33

   82 STATEMENT_FUNC_DEF: FUNCTION FUNC_DEF_TYPE ID • ROUND_LEFT ROUND_RIGHT STATEMENTS_BLOCK
   83                   | FUNCTION FUNC_DEF_TYPE ID • ROUND_LEFT SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS ROUND_RIGHT STATEMENTS_BLOCK

    ROUND_LEFT  shift, and go to state 44


State 34

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   46         | ID SQUARE_LEFT • EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 54
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 35

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   68 DECLARE_INITIALIZE: ID ASSIGN • EXP_R
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 59
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 36

   46 HD_ARRAY: ID • SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   65 DECLARE_NON_INITIALIZE: STAR ID •  [SEMICOLON, COMMA]
   69 DECLARE_INITIALIZE: STAR ID • ASSIGN EXP_R

    SQUARE_LEFT  shift, and go to state 34
    ASSIGN       shift, and go to state 60

    $default  reduce using rule 65 (DECLARE_NON_INITIALIZE)


State 37

   67 DECLARE_NON_INITIALIZE: STAR HD_ARRAY •

    $default  reduce using rule 67 (DECLARE_NON_INITIALIZE)


State 38

   61 DECLARE_MORE: SEMICOLON •

    $default  reduce using rule 61 (DECLARE_MORE)


State 39

   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   62 DECLARE_MORE: COMMA • DECLARE_INITIALIZE DECLARE_MORE
   63             | COMMA • DECLARE_NON_INITIALIZE DECLARE_MORE
   64 DECLARE_NON_INITIALIZE: • ID
   65                       | • STAR ID
   66                       | • HD_ARRAY
   67                       | • STAR HD_ARRAY
   68 DECLARE_INITIALIZE: • ID ASSIGN EXP_R
   69                   | • STAR ID ASSIGN EXP_R

    ID    shift, and go to state 25
    STAR  shift, and go to state 26

    HD_ARRAY                go to state 27
    DECLARE_NON_INITIALIZE  go to state 61
    DECLARE_INITIALIZE      go to state 62


State 40

   60 STATEMENT_VAR_DEF: VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE •

    $default  reduce using rule 60 (STATEMENT_VAR_DEF)


State 41

   59 STATEMENT_VAR_DEF: VAR_DEF_TYPE DECLARE_INITIALIZE DECLARE_MORE •

    $default  reduce using rule 59 (STATEMENT_VAR_DEF)


State 42

   71 STATEMENT_STRUCT_DEF: STRUCT ID BEGIN STRUCT_MEMBER_DEF • MORE_STRUCT_MEMBER_DEF END SEMICOLON
   72 MORE_STRUCT_MEMBER_DEF: • STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF
   73                       | • %empty  [END]
   74 STRUCT_MEMBER_DEF: • VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE_NON_INITIALIZE SEMICOLON
   92 DT_STRUCT: • STRUCT ID
   94 VAR_DEF_TYPE: • DT_INTEGER
   95             | • DT_FLOAT
   96             | • DT_BOOLEAN
   97             | • DT_STRUCT

    DT_INTEGER  shift, and go to state 1
    DT_BOOLEAN  shift, and go to state 2
    DT_FLOAT    shift, and go to state 3
    STRUCT      shift, and go to state 17

    $default  reduce using rule 73 (MORE_STRUCT_MEMBER_DEF)

    MORE_STRUCT_MEMBER_DEF  go to state 63
    STRUCT_MEMBER_DEF       go to state 64
    DT_STRUCT               go to state 11
    VAR_DEF_TYPE            go to state 43


State 43

   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   64 DECLARE_NON_INITIALIZE: • ID
   65                       | • STAR ID
   66                       | • HD_ARRAY
   67                       | • STAR HD_ARRAY
   74 STRUCT_MEMBER_DEF: VAR_DEF_TYPE • DECLARE_NON_INITIALIZE DECLARE_MORE_NON_INITIALIZE SEMICOLON

    ID    shift, and go to state 65
    STAR  shift, and go to state 66

    HD_ARRAY                go to state 27
    DECLARE_NON_INITIALIZE  go to state 67


State 44

   82 STATEMENT_FUNC_DEF: FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT • ROUND_RIGHT STATEMENTS_BLOCK
   83                   | FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT • SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS ROUND_RIGHT STATEMENTS_BLOCK
   86 SINGLE_RECV_FUNC_ARG: • FUNC_DEF_TYPE ID
   87                     | • FUNC_DEF_TYPE RECV_HD_ARRAY
   92 DT_STRUCT: • STRUCT ID
   93 DT_POINTER: • VAR_DEF_TYPE STAR
   94 VAR_DEF_TYPE: • DT_INTEGER
   95             | • DT_FLOAT
   96             | • DT_BOOLEAN
   97             | • DT_STRUCT
   98 FUNC_DEF_TYPE: • DT_INTEGER
   99              | • DT_FLOAT
  100              | • DT_BOOLEAN
  101              | • DT_POINTER

    DT_INTEGER   shift, and go to state 14
    DT_BOOLEAN   shift, and go to state 15
    DT_FLOAT     shift, and go to state 16
    STRUCT       shift, and go to state 17
    ROUND_RIGHT  shift, and go to state 68

    SINGLE_RECV_FUNC_ARG  go to state 69
    DT_STRUCT             go to state 11
    DT_POINTER            go to state 18
    VAR_DEF_TYPE          go to state 19
    FUNC_DEF_TYPE         go to state 70


State 45

   49 NUMBER: CONST_INTEGER •

    $default  reduce using rule 49 (NUMBER)


State 46

   51 NUMBER: CONST_FLOAT •

    $default  reduce using rule 51 (NUMBER)


State 47

   39 EXP_R: CONST_STRING •

    $default  reduce using rule 39 (EXP_R)


State 48

   50 NUMBER: CONST_BOOLEAN •

    $default  reduce using rule 50 (NUMBER)


State 49

   42 EXP_L: ID •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, ASSIGN, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT, PLUS, MINUS, STAR, DIVIDE, MOD]
   43      | ID • DOT EXP_L
   46 HD_ARRAY: ID • SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   78 FUNC_CALL: ID • ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | ID • ROUND_LEFT ROUND_RIGHT

    DOT          shift, and go to state 71
    ROUND_LEFT   shift, and go to state 72
    SQUARE_LEFT  shift, and go to state 34

    $default  reduce using rule 42 (EXP_L)


State 50

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   36      | ROUND_LEFT • EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 73
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 51

   38 EXP_R: APSAND • EXP_L
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM

    ID  shift, and go to state 74

    EXP_L     go to state 75
    HD_ARRAY  go to state 56


State 52

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   34      | PLUS • EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 76
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 53

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   35      | MINUS • EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 77
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 54

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   46 HD_ARRAY: ID SQUARE_LEFT EXP_R • SQUARE_RIGHT MORE_ARRAY_DIM

    SQUARE_RIGHT  shift, and go to state 78
    LOR           shift, and go to state 79
    LAND          shift, and go to state 80
    BOR           shift, and go to state 81
    BXOR          shift, and go to state 82
    APSAND        shift, and go to state 83
    EQ            shift, and go to state 84
    NE            shift, and go to state 85
    LE            shift, and go to state 86
    GE            shift, and go to state 87
    LT            shift, and go to state 88
    GT            shift, and go to state 89
    PLUS          shift, and go to state 90
    MINUS         shift, and go to state 91
    STAR          shift, and go to state 92
    DIVIDE        shift, and go to state 93
    MOD           shift, and go to state 94


State 55

   37 EXP_R: EXP_L •

    $default  reduce using rule 37 (EXP_R)


State 56

   44 EXP_L: HD_ARRAY •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, ASSIGN, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT, PLUS, MINUS, STAR, DIVIDE, MOD]
   45      | HD_ARRAY • DOT EXP_L

    DOT  shift, and go to state 95

    $default  reduce using rule 44 (EXP_L)


State 57

   40 EXP_R: NUMBER •

    $default  reduce using rule 40 (EXP_R)


State 58

   41 EXP_R: FUNC_CALL •

    $default  reduce using rule 41 (EXP_R)


State 59

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   68 DECLARE_INITIALIZE: ID ASSIGN EXP_R •  [SEMICOLON, COMMA]

    LOR     shift, and go to state 79
    LAND    shift, and go to state 80
    BOR     shift, and go to state 81
    BXOR    shift, and go to state 82
    APSAND  shift, and go to state 83
    EQ      shift, and go to state 84
    NE      shift, and go to state 85
    LE      shift, and go to state 86
    GE      shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 68 (DECLARE_INITIALIZE)


State 60

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   69 DECLARE_INITIALIZE: STAR ID ASSIGN • EXP_R
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 96
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 61

   61 DECLARE_MORE: • SEMICOLON
   62             | • COMMA DECLARE_INITIALIZE DECLARE_MORE
   63             | • COMMA DECLARE_NON_INITIALIZE DECLARE_MORE
   63             | COMMA DECLARE_NON_INITIALIZE • DECLARE_MORE

    SEMICOLON  shift, and go to state 38
    COMMA      shift, and go to state 39

    DECLARE_MORE  go to state 97


State 62

   61 DECLARE_MORE: • SEMICOLON
   62             | • COMMA DECLARE_INITIALIZE DECLARE_MORE
   62             | COMMA DECLARE_INITIALIZE • DECLARE_MORE
   63             | • COMMA DECLARE_NON_INITIALIZE DECLARE_MORE

    SEMICOLON  shift, and go to state 38
    COMMA      shift, and go to state 39

    DECLARE_MORE  go to state 98


State 63

   71 STATEMENT_STRUCT_DEF: STRUCT ID BEGIN STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF • END SEMICOLON

    END  shift, and go to state 99


State 64

   72 MORE_STRUCT_MEMBER_DEF: • STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF
   72                       | STRUCT_MEMBER_DEF • MORE_STRUCT_MEMBER_DEF
   73                       | • %empty  [END]
   74 STRUCT_MEMBER_DEF: • VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE_NON_INITIALIZE SEMICOLON
   92 DT_STRUCT: • STRUCT ID
   94 VAR_DEF_TYPE: • DT_INTEGER
   95             | • DT_FLOAT
   96             | • DT_BOOLEAN
   97             | • DT_STRUCT

    DT_INTEGER  shift, and go to state 1
    DT_BOOLEAN  shift, and go to state 2
    DT_FLOAT    shift, and go to state 3
    STRUCT      shift, and go to state 17

    $default  reduce using rule 73 (MORE_STRUCT_MEMBER_DEF)

    MORE_STRUCT_MEMBER_DEF  go to state 100
    STRUCT_MEMBER_DEF       go to state 64
    DT_STRUCT               go to state 11
    VAR_DEF_TYPE            go to state 43


State 65

   46 HD_ARRAY: ID • SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   64 DECLARE_NON_INITIALIZE: ID •  [SEMICOLON, COMMA]

    SQUARE_LEFT  shift, and go to state 34

    $default  reduce using rule 64 (DECLARE_NON_INITIALIZE)


State 66

   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   65 DECLARE_NON_INITIALIZE: STAR • ID
   67                       | STAR • HD_ARRAY

    ID  shift, and go to state 101

    HD_ARRAY  go to state 37


State 67

   74 STRUCT_MEMBER_DEF: VAR_DEF_TYPE DECLARE_NON_INITIALIZE • DECLARE_MORE_NON_INITIALIZE SEMICOLON
   75 DECLARE_MORE_NON_INITIALIZE: • COMMA DECLARE_NON_INITIALIZE DECLARE_MORE_NON_INITIALIZE
   76                            | • %empty  [SEMICOLON]

    COMMA  shift, and go to state 102

    $default  reduce using rule 76 (DECLARE_MORE_NON_INITIALIZE)

    DECLARE_MORE_NON_INITIALIZE  go to state 103


State 68

    6 STATEMENTS_BLOCK: • BEGIN STATEMENTS END
    7                 | • BEGIN END
   82 STATEMENT_FUNC_DEF: FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT ROUND_RIGHT • STATEMENTS_BLOCK

    BEGIN  shift, and go to state 104

    STATEMENTS_BLOCK  go to state 105


State 69

   83 STATEMENT_FUNC_DEF: FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT SINGLE_RECV_FUNC_ARG • RECV_FUNC_ARGS ROUND_RIGHT STATEMENTS_BLOCK
   84 RECV_FUNC_ARGS: • COMMA SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS
   85               | • %empty  [ROUND_RIGHT]

    COMMA  shift, and go to state 106

    $default  reduce using rule 85 (RECV_FUNC_ARGS)

    RECV_FUNC_ARGS  go to state 107


State 70

   86 SINGLE_RECV_FUNC_ARG: FUNC_DEF_TYPE • ID
   87                     | FUNC_DEF_TYPE • RECV_HD_ARRAY
   88 RECV_HD_ARRAY: • ID SQUARE_LEFT SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM
   89              | • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM

    ID  shift, and go to state 108

    RECV_HD_ARRAY  go to state 109


State 71

   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   43      | ID DOT • EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM

    ID  shift, and go to state 74

    EXP_L     go to state 110
    HD_ARRAY  go to state 56


State 72

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   78          | ID ROUND_LEFT • EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT
   79          | ID ROUND_LEFT • ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    ROUND_RIGHT    shift, and go to state 111
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 112
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 73

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   36      | ROUND_LEFT EXP_R • ROUND_RIGHT

    ROUND_RIGHT  shift, and go to state 113
    LOR          shift, and go to state 79
    LAND         shift, and go to state 80
    BOR          shift, and go to state 81
    BXOR         shift, and go to state 82
    APSAND       shift, and go to state 83
    EQ           shift, and go to state 84
    NE           shift, and go to state 85
    LE           shift, and go to state 86
    GE           shift, and go to state 87
    LT           shift, and go to state 88
    GT           shift, and go to state 89
    PLUS         shift, and go to state 90
    MINUS        shift, and go to state 91
    STAR         shift, and go to state 92
    DIVIDE       shift, and go to state 93
    MOD          shift, and go to state 94


State 74

   42 EXP_L: ID •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, ASSIGN, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT, PLUS, MINUS, STAR, DIVIDE, MOD]
   43      | ID • DOT EXP_L
   46 HD_ARRAY: ID • SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM

    DOT          shift, and go to state 71
    SQUARE_LEFT  shift, and go to state 34

    $default  reduce using rule 42 (EXP_L)


State 75

   38 EXP_R: APSAND EXP_L •

    $default  reduce using rule 38 (EXP_R)


State 76

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   34      | PLUS EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT, PLUS, MINUS, STAR, DIVIDE, MOD]

    $default  reduce using rule 34 (EXP_R)

    Conflict between rule 34 and token LOR resolved as reduce (LOR < POSITIVE).
    Conflict between rule 34 and token LAND resolved as reduce (LAND < POSITIVE).
    Conflict between rule 34 and token BOR resolved as reduce (BOR < POSITIVE).
    Conflict between rule 34 and token BXOR resolved as reduce (BXOR < POSITIVE).
    Conflict between rule 34 and token APSAND resolved as reduce (APSAND < POSITIVE).
    Conflict between rule 34 and token EQ resolved as reduce (EQ < POSITIVE).
    Conflict between rule 34 and token NE resolved as reduce (NE < POSITIVE).
    Conflict between rule 34 and token LE resolved as reduce (LE < POSITIVE).
    Conflict between rule 34 and token GE resolved as reduce (GE < POSITIVE).
    Conflict between rule 34 and token LT resolved as reduce (LT < POSITIVE).
    Conflict between rule 34 and token GT resolved as reduce (GT < POSITIVE).
    Conflict between rule 34 and token PLUS resolved as reduce (PLUS < POSITIVE).
    Conflict between rule 34 and token MINUS resolved as reduce (MINUS < POSITIVE).
    Conflict between rule 34 and token STAR resolved as reduce (STAR < POSITIVE).
    Conflict between rule 34 and token DIVIDE resolved as reduce (DIVIDE < POSITIVE).
    Conflict between rule 34 and token MOD resolved as reduce (MOD < POSITIVE).


State 77

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   35      | MINUS EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT, PLUS, MINUS, STAR, DIVIDE, MOD]

    $default  reduce using rule 35 (EXP_R)

    Conflict between rule 35 and token LOR resolved as reduce (LOR < NEGATIVE).
    Conflict between rule 35 and token LAND resolved as reduce (LAND < NEGATIVE).
    Conflict between rule 35 and token BOR resolved as reduce (BOR < NEGATIVE).
    Conflict between rule 35 and token BXOR resolved as reduce (BXOR < NEGATIVE).
    Conflict between rule 35 and token APSAND resolved as reduce (APSAND < NEGATIVE).
    Conflict between rule 35 and token EQ resolved as reduce (EQ < NEGATIVE).
    Conflict between rule 35 and token NE resolved as reduce (NE < NEGATIVE).
    Conflict between rule 35 and token LE resolved as reduce (LE < NEGATIVE).
    Conflict between rule 35 and token GE resolved as reduce (GE < NEGATIVE).
    Conflict between rule 35 and token LT resolved as reduce (LT < NEGATIVE).
    Conflict between rule 35 and token GT resolved as reduce (GT < NEGATIVE).
    Conflict between rule 35 and token PLUS resolved as reduce (PLUS < NEGATIVE).
    Conflict between rule 35 and token MINUS resolved as reduce (MINUS < NEGATIVE).
    Conflict between rule 35 and token STAR resolved as reduce (STAR < NEGATIVE).
    Conflict between rule 35 and token DIVIDE resolved as reduce (DIVIDE < NEGATIVE).
    Conflict between rule 35 and token MOD resolved as reduce (MOD < NEGATIVE).


State 78

   46 HD_ARRAY: ID SQUARE_LEFT EXP_R SQUARE_RIGHT • MORE_ARRAY_DIM
   47 MORE_ARRAY_DIM: • SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   48               | • %empty  [SEMICOLON, COMMA, DOT, ROUND_RIGHT, SQUARE_RIGHT, ASSIGN, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT, PLUS, MINUS, STAR, DIVIDE, MOD]

    SQUARE_LEFT  shift, and go to state 114

    $default  reduce using rule 48 (MORE_ARRAY_DIM)

    MORE_ARRAY_DIM  go to state 115


State 79

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   29      | EXP_R LOR • EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 116
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 80

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   30      | EXP_R LAND • EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 117
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 81

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   31      | EXP_R BOR • EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 118
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 82

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   32      | EXP_R BXOR • EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 119
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 83

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   33      | EXP_R APSAND • EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 120
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 84

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   23      | EXP_R EQ • EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 121
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 85

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   22      | EXP_R NE • EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 122
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 86

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   19      | EXP_R LE • EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 123
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 87

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   21      | EXP_R GE • EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 124
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 88

   18 EXP_R: • EXP_R LT EXP_R
   18      | EXP_R LT • EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 125
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 89

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   20      | EXP_R GT • EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 126
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 90

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   24      | EXP_R PLUS • EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 127
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 91

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   25      | EXP_R MINUS • EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 128
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 92

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   26      | EXP_R STAR • EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 129
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 93

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   27      | EXP_R DIVIDE • EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 130
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 94

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   28      | EXP_R MOD • EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 131
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 95

   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   45      | HD_ARRAY DOT • EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM

    ID  shift, and go to state 74

    EXP_L     go to state 132
    HD_ARRAY  go to state 56


State 96

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   69 DECLARE_INITIALIZE: STAR ID ASSIGN EXP_R •  [SEMICOLON, COMMA]

    LOR     shift, and go to state 79
    LAND    shift, and go to state 80
    BOR     shift, and go to state 81
    BXOR    shift, and go to state 82
    APSAND  shift, and go to state 83
    EQ      shift, and go to state 84
    NE      shift, and go to state 85
    LE      shift, and go to state 86
    GE      shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 69 (DECLARE_INITIALIZE)


State 97

   63 DECLARE_MORE: COMMA DECLARE_NON_INITIALIZE DECLARE_MORE •

    $default  reduce using rule 63 (DECLARE_MORE)


State 98

   62 DECLARE_MORE: COMMA DECLARE_INITIALIZE DECLARE_MORE •

    $default  reduce using rule 62 (DECLARE_MORE)


State 99

   71 STATEMENT_STRUCT_DEF: STRUCT ID BEGIN STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF END • SEMICOLON

    SEMICOLON  shift, and go to state 133


State 100

   72 MORE_STRUCT_MEMBER_DEF: STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF •

    $default  reduce using rule 72 (MORE_STRUCT_MEMBER_DEF)


State 101

   46 HD_ARRAY: ID • SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   65 DECLARE_NON_INITIALIZE: STAR ID •  [SEMICOLON, COMMA]

    SQUARE_LEFT  shift, and go to state 34

    $default  reduce using rule 65 (DECLARE_NON_INITIALIZE)


State 102

   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   64 DECLARE_NON_INITIALIZE: • ID
   65                       | • STAR ID
   66                       | • HD_ARRAY
   67                       | • STAR HD_ARRAY
   75 DECLARE_MORE_NON_INITIALIZE: COMMA • DECLARE_NON_INITIALIZE DECLARE_MORE_NON_INITIALIZE

    ID    shift, and go to state 65
    STAR  shift, and go to state 66

    HD_ARRAY                go to state 27
    DECLARE_NON_INITIALIZE  go to state 134


State 103

   74 STRUCT_MEMBER_DEF: VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE_NON_INITIALIZE • SEMICOLON

    SEMICOLON  shift, and go to state 135


State 104

    6 STATEMENTS_BLOCK: BEGIN • STATEMENTS END
    7                 | BEGIN • END
    8 STATEMENTS: • STATEMENT STATEMENTS
    9           | • STATEMENT
   10 STATEMENT: • STATEMENT_VAR_DEF
   11          | • STATEMENT_ASSIGN
   12          | • STATEMENT_IF
   13          | • STATEMENT_WHILE
   14          | • STATEMENT_STRUCT_DEF
   15          | • STATEMENT_RETURN
   16          | • FUNC_CALL SEMICOLON
   17          | • SEMICOLON
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   52 STATEMENT_IF: • IF ROUND_LEFT EXP_R ROUND_RIGHT STATEMENTS_BLOCK STATEMENT_ELSE
   56 STATEMENT_WHILE: • WHILE ROUND_LEFT EXP_R ROUND_RIGHT WHILE_BODY
   59 STATEMENT_VAR_DEF: • VAR_DEF_TYPE DECLARE_INITIALIZE DECLARE_MORE
   60                  | • VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE
   70 STATEMENT_ASSIGN: • EXP_L ASSIGN EXP_R SEMICOLON
   71 STATEMENT_STRUCT_DEF: • STRUCT ID BEGIN STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF END SEMICOLON
   77 STATEMENT_RETURN: • RETURN EXP_R SEMICOLON
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT
   92 DT_STRUCT: • STRUCT ID
   94 VAR_DEF_TYPE: • DT_INTEGER
   95             | • DT_FLOAT
   96             | • DT_BOOLEAN
   97             | • DT_STRUCT

    DT_INTEGER  shift, and go to state 1
    DT_BOOLEAN  shift, and go to state 2
    DT_FLOAT    shift, and go to state 3
    STRUCT      shift, and go to state 4
    WHILE       shift, and go to state 136
    IF          shift, and go to state 137
    RETURN      shift, and go to state 138
    ID          shift, and go to state 49
    SEMICOLON   shift, and go to state 139
    END         shift, and go to state 140

    STATEMENTS            go to state 141
    STATEMENT             go to state 142
    EXP_L                 go to state 143
    HD_ARRAY              go to state 56
    STATEMENT_IF          go to state 144
    STATEMENT_WHILE       go to state 145
    STATEMENT_VAR_DEF     go to state 146
    STATEMENT_ASSIGN      go to state 147
    STATEMENT_STRUCT_DEF  go to state 148
    STATEMENT_RETURN      go to state 149
    FUNC_CALL             go to state 150
    DT_STRUCT             go to state 11
    VAR_DEF_TYPE          go to state 12


State 105

   82 STATEMENT_FUNC_DEF: FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT ROUND_RIGHT STATEMENTS_BLOCK •

    $default  reduce using rule 82 (STATEMENT_FUNC_DEF)


State 106

   84 RECV_FUNC_ARGS: COMMA • SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS
   86 SINGLE_RECV_FUNC_ARG: • FUNC_DEF_TYPE ID
   87                     | • FUNC_DEF_TYPE RECV_HD_ARRAY
   92 DT_STRUCT: • STRUCT ID
   93 DT_POINTER: • VAR_DEF_TYPE STAR
   94 VAR_DEF_TYPE: • DT_INTEGER
   95             | • DT_FLOAT
   96             | • DT_BOOLEAN
   97             | • DT_STRUCT
   98 FUNC_DEF_TYPE: • DT_INTEGER
   99              | • DT_FLOAT
  100              | • DT_BOOLEAN
  101              | • DT_POINTER

    DT_INTEGER  shift, and go to state 14
    DT_BOOLEAN  shift, and go to state 15
    DT_FLOAT    shift, and go to state 16
    STRUCT      shift, and go to state 17

    SINGLE_RECV_FUNC_ARG  go to state 151
    DT_STRUCT             go to state 11
    DT_POINTER            go to state 18
    VAR_DEF_TYPE          go to state 19
    FUNC_DEF_TYPE         go to state 70


State 107

   83 STATEMENT_FUNC_DEF: FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS • ROUND_RIGHT STATEMENTS_BLOCK

    ROUND_RIGHT  shift, and go to state 152


State 108

   86 SINGLE_RECV_FUNC_ARG: FUNC_DEF_TYPE ID •  [COMMA, ROUND_RIGHT]
   88 RECV_HD_ARRAY: ID • SQUARE_LEFT SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM
   89              | ID • SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM

    SQUARE_LEFT  shift, and go to state 153

    $default  reduce using rule 86 (SINGLE_RECV_FUNC_ARG)


State 109

   87 SINGLE_RECV_FUNC_ARG: FUNC_DEF_TYPE RECV_HD_ARRAY •

    $default  reduce using rule 87 (SINGLE_RECV_FUNC_ARG)


State 110

   43 EXP_L: ID DOT EXP_L •

    $default  reduce using rule 43 (EXP_L)


State 111

   79 FUNC_CALL: ID ROUND_LEFT ROUND_RIGHT •

    $default  reduce using rule 79 (FUNC_CALL)


State 112

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   78 FUNC_CALL: ID ROUND_LEFT EXP_R • SEND_FUNC_ARGS ROUND_RIGHT
   80 SEND_FUNC_ARGS: • COMMA EXP_R SEND_FUNC_ARGS
   81               | • %empty  [ROUND_RIGHT]

    COMMA   shift, and go to state 154
    LOR     shift, and go to state 79
    LAND    shift, and go to state 80
    BOR     shift, and go to state 81
    BXOR    shift, and go to state 82
    APSAND  shift, and go to state 83
    EQ      shift, and go to state 84
    NE      shift, and go to state 85
    LE      shift, and go to state 86
    GE      shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 81 (SEND_FUNC_ARGS)

    SEND_FUNC_ARGS  go to state 155


State 113

   36 EXP_R: ROUND_LEFT EXP_R ROUND_RIGHT •

    $default  reduce using rule 36 (EXP_R)


State 114

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   47 MORE_ARRAY_DIM: SQUARE_LEFT • EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 156
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 115

   46 HD_ARRAY: ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM •

    $default  reduce using rule 46 (HD_ARRAY)


State 116

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   29      | EXP_R LOR EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR]
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    LAND    shift, and go to state 80
    BOR     shift, and go to state 81
    BXOR    shift, and go to state 82
    APSAND  shift, and go to state 83
    EQ      shift, and go to state 84
    NE      shift, and go to state 85
    LE      shift, and go to state 86
    GE      shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 29 (EXP_R)

    Conflict between rule 29 and token LOR resolved as reduce (%left LOR).
    Conflict between rule 29 and token LAND resolved as shift (LOR < LAND).
    Conflict between rule 29 and token BOR resolved as shift (LOR < BOR).
    Conflict between rule 29 and token BXOR resolved as shift (LOR < BXOR).
    Conflict between rule 29 and token APSAND resolved as shift (LOR < APSAND).
    Conflict between rule 29 and token EQ resolved as shift (LOR < EQ).
    Conflict between rule 29 and token NE resolved as shift (LOR < NE).
    Conflict between rule 29 and token LE resolved as shift (LOR < LE).
    Conflict between rule 29 and token GE resolved as shift (LOR < GE).
    Conflict between rule 29 and token LT resolved as shift (LOR < LT).
    Conflict between rule 29 and token GT resolved as shift (LOR < GT).
    Conflict between rule 29 and token PLUS resolved as shift (LOR < PLUS).
    Conflict between rule 29 and token MINUS resolved as shift (LOR < MINUS).
    Conflict between rule 29 and token STAR resolved as shift (LOR < STAR).
    Conflict between rule 29 and token DIVIDE resolved as shift (LOR < DIVIDE).
    Conflict between rule 29 and token MOD resolved as shift (LOR < MOD).


State 117

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   30      | EXP_R LAND EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND]
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    BOR     shift, and go to state 81
    BXOR    shift, and go to state 82
    APSAND  shift, and go to state 83
    EQ      shift, and go to state 84
    NE      shift, and go to state 85
    LE      shift, and go to state 86
    GE      shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 30 (EXP_R)

    Conflict between rule 30 and token LOR resolved as reduce (LOR < LAND).
    Conflict between rule 30 and token LAND resolved as reduce (%left LAND).
    Conflict between rule 30 and token BOR resolved as shift (LAND < BOR).
    Conflict between rule 30 and token BXOR resolved as shift (LAND < BXOR).
    Conflict between rule 30 and token APSAND resolved as shift (LAND < APSAND).
    Conflict between rule 30 and token EQ resolved as shift (LAND < EQ).
    Conflict between rule 30 and token NE resolved as shift (LAND < NE).
    Conflict between rule 30 and token LE resolved as shift (LAND < LE).
    Conflict between rule 30 and token GE resolved as shift (LAND < GE).
    Conflict between rule 30 and token LT resolved as shift (LAND < LT).
    Conflict between rule 30 and token GT resolved as shift (LAND < GT).
    Conflict between rule 30 and token PLUS resolved as shift (LAND < PLUS).
    Conflict between rule 30 and token MINUS resolved as shift (LAND < MINUS).
    Conflict between rule 30 and token STAR resolved as shift (LAND < STAR).
    Conflict between rule 30 and token DIVIDE resolved as shift (LAND < DIVIDE).
    Conflict between rule 30 and token MOD resolved as shift (LAND < MOD).


State 118

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   31      | EXP_R BOR EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR]
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    BXOR    shift, and go to state 82
    APSAND  shift, and go to state 83
    EQ      shift, and go to state 84
    NE      shift, and go to state 85
    LE      shift, and go to state 86
    GE      shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 31 (EXP_R)

    Conflict between rule 31 and token LOR resolved as reduce (LOR < BOR).
    Conflict between rule 31 and token LAND resolved as reduce (LAND < BOR).
    Conflict between rule 31 and token BOR resolved as reduce (%left BOR).
    Conflict between rule 31 and token BXOR resolved as shift (BOR < BXOR).
    Conflict between rule 31 and token APSAND resolved as shift (BOR < APSAND).
    Conflict between rule 31 and token EQ resolved as shift (BOR < EQ).
    Conflict between rule 31 and token NE resolved as shift (BOR < NE).
    Conflict between rule 31 and token LE resolved as shift (BOR < LE).
    Conflict between rule 31 and token GE resolved as shift (BOR < GE).
    Conflict between rule 31 and token LT resolved as shift (BOR < LT).
    Conflict between rule 31 and token GT resolved as shift (BOR < GT).
    Conflict between rule 31 and token PLUS resolved as shift (BOR < PLUS).
    Conflict between rule 31 and token MINUS resolved as shift (BOR < MINUS).
    Conflict between rule 31 and token STAR resolved as shift (BOR < STAR).
    Conflict between rule 31 and token DIVIDE resolved as shift (BOR < DIVIDE).
    Conflict between rule 31 and token MOD resolved as shift (BOR < MOD).


State 119

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   32      | EXP_R BXOR EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR]
   33      | EXP_R • APSAND EXP_R

    APSAND  shift, and go to state 83
    EQ      shift, and go to state 84
    NE      shift, and go to state 85
    LE      shift, and go to state 86
    GE      shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 32 (EXP_R)

    Conflict between rule 32 and token LOR resolved as reduce (LOR < BXOR).
    Conflict between rule 32 and token LAND resolved as reduce (LAND < BXOR).
    Conflict between rule 32 and token BOR resolved as reduce (BOR < BXOR).
    Conflict between rule 32 and token BXOR resolved as reduce (%left BXOR).
    Conflict between rule 32 and token APSAND resolved as shift (BXOR < APSAND).
    Conflict between rule 32 and token EQ resolved as shift (BXOR < EQ).
    Conflict between rule 32 and token NE resolved as shift (BXOR < NE).
    Conflict between rule 32 and token LE resolved as shift (BXOR < LE).
    Conflict between rule 32 and token GE resolved as shift (BXOR < GE).
    Conflict between rule 32 and token LT resolved as shift (BXOR < LT).
    Conflict between rule 32 and token GT resolved as shift (BXOR < GT).
    Conflict between rule 32 and token PLUS resolved as shift (BXOR < PLUS).
    Conflict between rule 32 and token MINUS resolved as shift (BXOR < MINUS).
    Conflict between rule 32 and token STAR resolved as shift (BXOR < STAR).
    Conflict between rule 32 and token DIVIDE resolved as shift (BXOR < DIVIDE).
    Conflict between rule 32 and token MOD resolved as shift (BXOR < MOD).


State 120

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   33      | EXP_R APSAND EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND]

    EQ      shift, and go to state 84
    NE      shift, and go to state 85
    LE      shift, and go to state 86
    GE      shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 33 (EXP_R)

    Conflict between rule 33 and token LOR resolved as reduce (LOR < APSAND).
    Conflict between rule 33 and token LAND resolved as reduce (LAND < APSAND).
    Conflict between rule 33 and token BOR resolved as reduce (BOR < APSAND).
    Conflict between rule 33 and token BXOR resolved as reduce (BXOR < APSAND).
    Conflict between rule 33 and token APSAND resolved as reduce (%left APSAND).
    Conflict between rule 33 and token EQ resolved as shift (APSAND < EQ).
    Conflict between rule 33 and token NE resolved as shift (APSAND < NE).
    Conflict between rule 33 and token LE resolved as shift (APSAND < LE).
    Conflict between rule 33 and token GE resolved as shift (APSAND < GE).
    Conflict between rule 33 and token LT resolved as shift (APSAND < LT).
    Conflict between rule 33 and token GT resolved as shift (APSAND < GT).
    Conflict between rule 33 and token PLUS resolved as shift (APSAND < PLUS).
    Conflict between rule 33 and token MINUS resolved as shift (APSAND < MINUS).
    Conflict between rule 33 and token STAR resolved as shift (APSAND < STAR).
    Conflict between rule 33 and token DIVIDE resolved as shift (APSAND < DIVIDE).
    Conflict between rule 33 and token MOD resolved as shift (APSAND < MOD).


State 121

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   23      | EXP_R EQ EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND, EQ, NE]
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    LE      shift, and go to state 86
    GE      shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 23 (EXP_R)

    Conflict between rule 23 and token LOR resolved as reduce (LOR < EQ).
    Conflict between rule 23 and token LAND resolved as reduce (LAND < EQ).
    Conflict between rule 23 and token BOR resolved as reduce (BOR < EQ).
    Conflict between rule 23 and token BXOR resolved as reduce (BXOR < EQ).
    Conflict between rule 23 and token APSAND resolved as reduce (APSAND < EQ).
    Conflict between rule 23 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 23 and token NE resolved as reduce (%left NE).
    Conflict between rule 23 and token LE resolved as shift (EQ < LE).
    Conflict between rule 23 and token GE resolved as shift (EQ < GE).
    Conflict between rule 23 and token LT resolved as shift (EQ < LT).
    Conflict between rule 23 and token GT resolved as shift (EQ < GT).
    Conflict between rule 23 and token PLUS resolved as shift (EQ < PLUS).
    Conflict between rule 23 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 23 and token STAR resolved as shift (EQ < STAR).
    Conflict between rule 23 and token DIVIDE resolved as shift (EQ < DIVIDE).
    Conflict between rule 23 and token MOD resolved as shift (EQ < MOD).


State 122

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   22      | EXP_R NE EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND, EQ, NE]
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    LE      shift, and go to state 86
    GE      shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 22 (EXP_R)

    Conflict between rule 22 and token LOR resolved as reduce (LOR < NE).
    Conflict between rule 22 and token LAND resolved as reduce (LAND < NE).
    Conflict between rule 22 and token BOR resolved as reduce (BOR < NE).
    Conflict between rule 22 and token BXOR resolved as reduce (BXOR < NE).
    Conflict between rule 22 and token APSAND resolved as reduce (APSAND < NE).
    Conflict between rule 22 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 22 and token NE resolved as reduce (%left NE).
    Conflict between rule 22 and token LE resolved as shift (NE < LE).
    Conflict between rule 22 and token GE resolved as shift (NE < GE).
    Conflict between rule 22 and token LT resolved as shift (NE < LT).
    Conflict between rule 22 and token GT resolved as shift (NE < GT).
    Conflict between rule 22 and token PLUS resolved as shift (NE < PLUS).
    Conflict between rule 22 and token MINUS resolved as shift (NE < MINUS).
    Conflict between rule 22 and token STAR resolved as shift (NE < STAR).
    Conflict between rule 22 and token DIVIDE resolved as shift (NE < DIVIDE).
    Conflict between rule 22 and token MOD resolved as shift (NE < MOD).


State 123

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   19      | EXP_R LE EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT]
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 19 (EXP_R)

    Conflict between rule 19 and token LOR resolved as reduce (LOR < LE).
    Conflict between rule 19 and token LAND resolved as reduce (LAND < LE).
    Conflict between rule 19 and token BOR resolved as reduce (BOR < LE).
    Conflict between rule 19 and token BXOR resolved as reduce (BXOR < LE).
    Conflict between rule 19 and token APSAND resolved as reduce (APSAND < LE).
    Conflict between rule 19 and token EQ resolved as reduce (EQ < LE).
    Conflict between rule 19 and token NE resolved as reduce (NE < LE).
    Conflict between rule 19 and token LE resolved as reduce (%left LE).
    Conflict between rule 19 and token GE resolved as reduce (%left GE).
    Conflict between rule 19 and token LT resolved as reduce (%left LT).
    Conflict between rule 19 and token GT resolved as reduce (%left GT).
    Conflict between rule 19 and token PLUS resolved as shift (LE < PLUS).
    Conflict between rule 19 and token MINUS resolved as shift (LE < MINUS).
    Conflict between rule 19 and token STAR resolved as shift (LE < STAR).
    Conflict between rule 19 and token DIVIDE resolved as shift (LE < DIVIDE).
    Conflict between rule 19 and token MOD resolved as shift (LE < MOD).


State 124

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   21      | EXP_R GE EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT]
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 21 (EXP_R)

    Conflict between rule 21 and token LOR resolved as reduce (LOR < GE).
    Conflict between rule 21 and token LAND resolved as reduce (LAND < GE).
    Conflict between rule 21 and token BOR resolved as reduce (BOR < GE).
    Conflict between rule 21 and token BXOR resolved as reduce (BXOR < GE).
    Conflict between rule 21 and token APSAND resolved as reduce (APSAND < GE).
    Conflict between rule 21 and token EQ resolved as reduce (EQ < GE).
    Conflict between rule 21 and token NE resolved as reduce (NE < GE).
    Conflict between rule 21 and token LE resolved as reduce (%left LE).
    Conflict between rule 21 and token GE resolved as reduce (%left GE).
    Conflict between rule 21 and token LT resolved as reduce (%left LT).
    Conflict between rule 21 and token GT resolved as reduce (%left GT).
    Conflict between rule 21 and token PLUS resolved as shift (GE < PLUS).
    Conflict between rule 21 and token MINUS resolved as shift (GE < MINUS).
    Conflict between rule 21 and token STAR resolved as shift (GE < STAR).
    Conflict between rule 21 and token DIVIDE resolved as shift (GE < DIVIDE).
    Conflict between rule 21 and token MOD resolved as shift (GE < MOD).


State 125

   18 EXP_R: EXP_R • LT EXP_R
   18      | EXP_R LT EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT]
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 18 (EXP_R)

    Conflict between rule 18 and token LOR resolved as reduce (LOR < LT).
    Conflict between rule 18 and token LAND resolved as reduce (LAND < LT).
    Conflict between rule 18 and token BOR resolved as reduce (BOR < LT).
    Conflict between rule 18 and token BXOR resolved as reduce (BXOR < LT).
    Conflict between rule 18 and token APSAND resolved as reduce (APSAND < LT).
    Conflict between rule 18 and token EQ resolved as reduce (EQ < LT).
    Conflict between rule 18 and token NE resolved as reduce (NE < LT).
    Conflict between rule 18 and token LE resolved as reduce (%left LE).
    Conflict between rule 18 and token GE resolved as reduce (%left GE).
    Conflict between rule 18 and token LT resolved as reduce (%left LT).
    Conflict between rule 18 and token GT resolved as reduce (%left GT).
    Conflict between rule 18 and token PLUS resolved as shift (LT < PLUS).
    Conflict between rule 18 and token MINUS resolved as shift (LT < MINUS).
    Conflict between rule 18 and token STAR resolved as shift (LT < STAR).
    Conflict between rule 18 and token DIVIDE resolved as shift (LT < DIVIDE).
    Conflict between rule 18 and token MOD resolved as shift (LT < MOD).


State 126

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   20      | EXP_R GT EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT]
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 20 (EXP_R)

    Conflict between rule 20 and token LOR resolved as reduce (LOR < GT).
    Conflict between rule 20 and token LAND resolved as reduce (LAND < GT).
    Conflict between rule 20 and token BOR resolved as reduce (BOR < GT).
    Conflict between rule 20 and token BXOR resolved as reduce (BXOR < GT).
    Conflict between rule 20 and token APSAND resolved as reduce (APSAND < GT).
    Conflict between rule 20 and token EQ resolved as reduce (EQ < GT).
    Conflict between rule 20 and token NE resolved as reduce (NE < GT).
    Conflict between rule 20 and token LE resolved as reduce (%left LE).
    Conflict between rule 20 and token GE resolved as reduce (%left GE).
    Conflict between rule 20 and token LT resolved as reduce (%left LT).
    Conflict between rule 20 and token GT resolved as reduce (%left GT).
    Conflict between rule 20 and token PLUS resolved as shift (GT < PLUS).
    Conflict between rule 20 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 20 and token STAR resolved as shift (GT < STAR).
    Conflict between rule 20 and token DIVIDE resolved as shift (GT < DIVIDE).
    Conflict between rule 20 and token MOD resolved as shift (GT < MOD).


State 127

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   24      | EXP_R PLUS EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT, PLUS, MINUS]
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 24 (EXP_R)

    Conflict between rule 24 and token LOR resolved as reduce (LOR < PLUS).
    Conflict between rule 24 and token LAND resolved as reduce (LAND < PLUS).
    Conflict between rule 24 and token BOR resolved as reduce (BOR < PLUS).
    Conflict between rule 24 and token BXOR resolved as reduce (BXOR < PLUS).
    Conflict between rule 24 and token APSAND resolved as reduce (APSAND < PLUS).
    Conflict between rule 24 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 24 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 24 and token LE resolved as reduce (LE < PLUS).
    Conflict between rule 24 and token GE resolved as reduce (GE < PLUS).
    Conflict between rule 24 and token LT resolved as reduce (LT < PLUS).
    Conflict between rule 24 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 24 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 24 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 24 and token STAR resolved as shift (PLUS < STAR).
    Conflict between rule 24 and token DIVIDE resolved as shift (PLUS < DIVIDE).
    Conflict between rule 24 and token MOD resolved as shift (PLUS < MOD).


State 128

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   25      | EXP_R MINUS EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT, PLUS, MINUS]
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 25 (EXP_R)

    Conflict between rule 25 and token LOR resolved as reduce (LOR < MINUS).
    Conflict between rule 25 and token LAND resolved as reduce (LAND < MINUS).
    Conflict between rule 25 and token BOR resolved as reduce (BOR < MINUS).
    Conflict between rule 25 and token BXOR resolved as reduce (BXOR < MINUS).
    Conflict between rule 25 and token APSAND resolved as reduce (APSAND < MINUS).
    Conflict between rule 25 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 25 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 25 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 25 and token GE resolved as reduce (GE < MINUS).
    Conflict between rule 25 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 25 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 25 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 25 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 25 and token STAR resolved as shift (MINUS < STAR).
    Conflict between rule 25 and token DIVIDE resolved as shift (MINUS < DIVIDE).
    Conflict between rule 25 and token MOD resolved as shift (MINUS < MOD).


State 129

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   26      | EXP_R STAR EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT, PLUS, MINUS, STAR, DIVIDE, MOD]
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    $default  reduce using rule 26 (EXP_R)

    Conflict between rule 26 and token LOR resolved as reduce (LOR < STAR).
    Conflict between rule 26 and token LAND resolved as reduce (LAND < STAR).
    Conflict between rule 26 and token BOR resolved as reduce (BOR < STAR).
    Conflict between rule 26 and token BXOR resolved as reduce (BXOR < STAR).
    Conflict between rule 26 and token APSAND resolved as reduce (APSAND < STAR).
    Conflict between rule 26 and token EQ resolved as reduce (EQ < STAR).
    Conflict between rule 26 and token NE resolved as reduce (NE < STAR).
    Conflict between rule 26 and token LE resolved as reduce (LE < STAR).
    Conflict between rule 26 and token GE resolved as reduce (GE < STAR).
    Conflict between rule 26 and token LT resolved as reduce (LT < STAR).
    Conflict between rule 26 and token GT resolved as reduce (GT < STAR).
    Conflict between rule 26 and token PLUS resolved as reduce (PLUS < STAR).
    Conflict between rule 26 and token MINUS resolved as reduce (MINUS < STAR).
    Conflict between rule 26 and token STAR resolved as reduce (%left STAR).
    Conflict between rule 26 and token DIVIDE resolved as reduce (%left DIVIDE).
    Conflict between rule 26 and token MOD resolved as reduce (%left MOD).


State 130

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   27      | EXP_R DIVIDE EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT, PLUS, MINUS, STAR, DIVIDE, MOD]
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    $default  reduce using rule 27 (EXP_R)

    Conflict between rule 27 and token LOR resolved as reduce (LOR < DIVIDE).
    Conflict between rule 27 and token LAND resolved as reduce (LAND < DIVIDE).
    Conflict between rule 27 and token BOR resolved as reduce (BOR < DIVIDE).
    Conflict between rule 27 and token BXOR resolved as reduce (BXOR < DIVIDE).
    Conflict between rule 27 and token APSAND resolved as reduce (APSAND < DIVIDE).
    Conflict between rule 27 and token EQ resolved as reduce (EQ < DIVIDE).
    Conflict between rule 27 and token NE resolved as reduce (NE < DIVIDE).
    Conflict between rule 27 and token LE resolved as reduce (LE < DIVIDE).
    Conflict between rule 27 and token GE resolved as reduce (GE < DIVIDE).
    Conflict between rule 27 and token LT resolved as reduce (LT < DIVIDE).
    Conflict between rule 27 and token GT resolved as reduce (GT < DIVIDE).
    Conflict between rule 27 and token PLUS resolved as reduce (PLUS < DIVIDE).
    Conflict between rule 27 and token MINUS resolved as reduce (MINUS < DIVIDE).
    Conflict between rule 27 and token STAR resolved as reduce (%left STAR).
    Conflict between rule 27 and token DIVIDE resolved as reduce (%left DIVIDE).
    Conflict between rule 27 and token MOD resolved as reduce (%left MOD).


State 131

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   28      | EXP_R MOD EXP_R •  [SEMICOLON, COMMA, ROUND_RIGHT, SQUARE_RIGHT, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT, PLUS, MINUS, STAR, DIVIDE, MOD]
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R

    $default  reduce using rule 28 (EXP_R)

    Conflict between rule 28 and token LOR resolved as reduce (LOR < MOD).
    Conflict between rule 28 and token LAND resolved as reduce (LAND < MOD).
    Conflict between rule 28 and token BOR resolved as reduce (BOR < MOD).
    Conflict between rule 28 and token BXOR resolved as reduce (BXOR < MOD).
    Conflict between rule 28 and token APSAND resolved as reduce (APSAND < MOD).
    Conflict between rule 28 and token EQ resolved as reduce (EQ < MOD).
    Conflict between rule 28 and token NE resolved as reduce (NE < MOD).
    Conflict between rule 28 and token LE resolved as reduce (LE < MOD).
    Conflict between rule 28 and token GE resolved as reduce (GE < MOD).
    Conflict between rule 28 and token LT resolved as reduce (LT < MOD).
    Conflict between rule 28 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 28 and token PLUS resolved as reduce (PLUS < MOD).
    Conflict between rule 28 and token MINUS resolved as reduce (MINUS < MOD).
    Conflict between rule 28 and token STAR resolved as reduce (%left STAR).
    Conflict between rule 28 and token DIVIDE resolved as reduce (%left DIVIDE).
    Conflict between rule 28 and token MOD resolved as reduce (%left MOD).


State 132

   45 EXP_L: HD_ARRAY DOT EXP_L •

    $default  reduce using rule 45 (EXP_L)


State 133

   71 STATEMENT_STRUCT_DEF: STRUCT ID BEGIN STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF END SEMICOLON •

    $default  reduce using rule 71 (STATEMENT_STRUCT_DEF)


State 134

   75 DECLARE_MORE_NON_INITIALIZE: • COMMA DECLARE_NON_INITIALIZE DECLARE_MORE_NON_INITIALIZE
   75                            | COMMA DECLARE_NON_INITIALIZE • DECLARE_MORE_NON_INITIALIZE
   76                            | • %empty  [SEMICOLON]

    COMMA  shift, and go to state 102

    $default  reduce using rule 76 (DECLARE_MORE_NON_INITIALIZE)

    DECLARE_MORE_NON_INITIALIZE  go to state 157


State 135

   74 STRUCT_MEMBER_DEF: VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE_NON_INITIALIZE SEMICOLON •

    $default  reduce using rule 74 (STRUCT_MEMBER_DEF)


State 136

   56 STATEMENT_WHILE: WHILE • ROUND_LEFT EXP_R ROUND_RIGHT WHILE_BODY

    ROUND_LEFT  shift, and go to state 158


State 137

   52 STATEMENT_IF: IF • ROUND_LEFT EXP_R ROUND_RIGHT STATEMENTS_BLOCK STATEMENT_ELSE

    ROUND_LEFT  shift, and go to state 159


State 138

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   77 STATEMENT_RETURN: RETURN • EXP_R SEMICOLON
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 160
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 139

   17 STATEMENT: SEMICOLON •

    $default  reduce using rule 17 (STATEMENT)


State 140

    7 STATEMENTS_BLOCK: BEGIN END •

    $default  reduce using rule 7 (STATEMENTS_BLOCK)


State 141

    6 STATEMENTS_BLOCK: BEGIN STATEMENTS • END

    END  shift, and go to state 161


State 142

    8 STATEMENTS: • STATEMENT STATEMENTS
    8           | STATEMENT • STATEMENTS
    9           | • STATEMENT
    9           | STATEMENT •  [END]
   10 STATEMENT: • STATEMENT_VAR_DEF
   11          | • STATEMENT_ASSIGN
   12          | • STATEMENT_IF
   13          | • STATEMENT_WHILE
   14          | • STATEMENT_STRUCT_DEF
   15          | • STATEMENT_RETURN
   16          | • FUNC_CALL SEMICOLON
   17          | • SEMICOLON
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   52 STATEMENT_IF: • IF ROUND_LEFT EXP_R ROUND_RIGHT STATEMENTS_BLOCK STATEMENT_ELSE
   56 STATEMENT_WHILE: • WHILE ROUND_LEFT EXP_R ROUND_RIGHT WHILE_BODY
   59 STATEMENT_VAR_DEF: • VAR_DEF_TYPE DECLARE_INITIALIZE DECLARE_MORE
   60                  | • VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE
   70 STATEMENT_ASSIGN: • EXP_L ASSIGN EXP_R SEMICOLON
   71 STATEMENT_STRUCT_DEF: • STRUCT ID BEGIN STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF END SEMICOLON
   77 STATEMENT_RETURN: • RETURN EXP_R SEMICOLON
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT
   92 DT_STRUCT: • STRUCT ID
   94 VAR_DEF_TYPE: • DT_INTEGER
   95             | • DT_FLOAT
   96             | • DT_BOOLEAN
   97             | • DT_STRUCT

    DT_INTEGER  shift, and go to state 1
    DT_BOOLEAN  shift, and go to state 2
    DT_FLOAT    shift, and go to state 3
    STRUCT      shift, and go to state 4
    WHILE       shift, and go to state 136
    IF          shift, and go to state 137
    RETURN      shift, and go to state 138
    ID          shift, and go to state 49
    SEMICOLON   shift, and go to state 139

    $default  reduce using rule 9 (STATEMENTS)

    STATEMENTS            go to state 162
    STATEMENT             go to state 142
    EXP_L                 go to state 143
    HD_ARRAY              go to state 56
    STATEMENT_IF          go to state 144
    STATEMENT_WHILE       go to state 145
    STATEMENT_VAR_DEF     go to state 146
    STATEMENT_ASSIGN      go to state 147
    STATEMENT_STRUCT_DEF  go to state 148
    STATEMENT_RETURN      go to state 149
    FUNC_CALL             go to state 150
    DT_STRUCT             go to state 11
    VAR_DEF_TYPE          go to state 12


State 143

   70 STATEMENT_ASSIGN: EXP_L • ASSIGN EXP_R SEMICOLON

    ASSIGN  shift, and go to state 163


State 144

   12 STATEMENT: STATEMENT_IF •

    $default  reduce using rule 12 (STATEMENT)


State 145

   13 STATEMENT: STATEMENT_WHILE •

    $default  reduce using rule 13 (STATEMENT)


State 146

   10 STATEMENT: STATEMENT_VAR_DEF •

    $default  reduce using rule 10 (STATEMENT)


State 147

   11 STATEMENT: STATEMENT_ASSIGN •

    $default  reduce using rule 11 (STATEMENT)


State 148

   14 STATEMENT: STATEMENT_STRUCT_DEF •

    $default  reduce using rule 14 (STATEMENT)


State 149

   15 STATEMENT: STATEMENT_RETURN •

    $default  reduce using rule 15 (STATEMENT)


State 150

   16 STATEMENT: FUNC_CALL • SEMICOLON

    SEMICOLON  shift, and go to state 164


State 151

   84 RECV_FUNC_ARGS: • COMMA SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS
   84               | COMMA SINGLE_RECV_FUNC_ARG • RECV_FUNC_ARGS
   85               | • %empty  [ROUND_RIGHT]

    COMMA  shift, and go to state 106

    $default  reduce using rule 85 (RECV_FUNC_ARGS)

    RECV_FUNC_ARGS  go to state 165


State 152

    6 STATEMENTS_BLOCK: • BEGIN STATEMENTS END
    7                 | • BEGIN END
   83 STATEMENT_FUNC_DEF: FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS ROUND_RIGHT • STATEMENTS_BLOCK

    BEGIN  shift, and go to state 104

    STATEMENTS_BLOCK  go to state 166


State 153

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT
   88 RECV_HD_ARRAY: ID SQUARE_LEFT • SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM
   89              | ID SQUARE_LEFT • EXP_R SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    SQUARE_RIGHT   shift, and go to state 167
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 168
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 154

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT
   80 SEND_FUNC_ARGS: COMMA • EXP_R SEND_FUNC_ARGS

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 169
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 155

   78 FUNC_CALL: ID ROUND_LEFT EXP_R SEND_FUNC_ARGS • ROUND_RIGHT

    ROUND_RIGHT  shift, and go to state 170


State 156

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   47 MORE_ARRAY_DIM: SQUARE_LEFT EXP_R • SQUARE_RIGHT MORE_ARRAY_DIM

    SQUARE_RIGHT  shift, and go to state 171
    LOR           shift, and go to state 79
    LAND          shift, and go to state 80
    BOR           shift, and go to state 81
    BXOR          shift, and go to state 82
    APSAND        shift, and go to state 83
    EQ            shift, and go to state 84
    NE            shift, and go to state 85
    LE            shift, and go to state 86
    GE            shift, and go to state 87
    LT            shift, and go to state 88
    GT            shift, and go to state 89
    PLUS          shift, and go to state 90
    MINUS         shift, and go to state 91
    STAR          shift, and go to state 92
    DIVIDE        shift, and go to state 93
    MOD           shift, and go to state 94


State 157

   75 DECLARE_MORE_NON_INITIALIZE: COMMA DECLARE_NON_INITIALIZE DECLARE_MORE_NON_INITIALIZE •

    $default  reduce using rule 75 (DECLARE_MORE_NON_INITIALIZE)


State 158

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   56 STATEMENT_WHILE: WHILE ROUND_LEFT • EXP_R ROUND_RIGHT WHILE_BODY
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 172
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 159

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   52 STATEMENT_IF: IF ROUND_LEFT • EXP_R ROUND_RIGHT STATEMENTS_BLOCK STATEMENT_ELSE
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 173
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 160

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   77 STATEMENT_RETURN: RETURN EXP_R • SEMICOLON

    SEMICOLON  shift, and go to state 174
    LOR        shift, and go to state 79
    LAND       shift, and go to state 80
    BOR        shift, and go to state 81
    BXOR       shift, and go to state 82
    APSAND     shift, and go to state 83
    EQ         shift, and go to state 84
    NE         shift, and go to state 85
    LE         shift, and go to state 86
    GE         shift, and go to state 87
    LT         shift, and go to state 88
    GT         shift, and go to state 89
    PLUS       shift, and go to state 90
    MINUS      shift, and go to state 91
    STAR       shift, and go to state 92
    DIVIDE     shift, and go to state 93
    MOD        shift, and go to state 94


State 161

    6 STATEMENTS_BLOCK: BEGIN STATEMENTS END •

    $default  reduce using rule 6 (STATEMENTS_BLOCK)


State 162

    8 STATEMENTS: STATEMENT STATEMENTS •

    $default  reduce using rule 8 (STATEMENTS)


State 163

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   70 STATEMENT_ASSIGN: EXP_L ASSIGN • EXP_R SEMICOLON
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 175
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 164

   16 STATEMENT: FUNC_CALL SEMICOLON •

    $default  reduce using rule 16 (STATEMENT)


State 165

   84 RECV_FUNC_ARGS: COMMA SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS •

    $default  reduce using rule 84 (RECV_FUNC_ARGS)


State 166

   83 STATEMENT_FUNC_DEF: FUNCTION FUNC_DEF_TYPE ID ROUND_LEFT SINGLE_RECV_FUNC_ARG RECV_FUNC_ARGS ROUND_RIGHT STATEMENTS_BLOCK •

    $default  reduce using rule 83 (STATEMENT_FUNC_DEF)


State 167

   88 RECV_HD_ARRAY: ID SQUARE_LEFT SQUARE_RIGHT • MORE_RECV_HD_ARRAY_DIM
   90 MORE_RECV_HD_ARRAY_DIM: • SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM
   91                       | • %empty  [COMMA, ROUND_RIGHT]

    SQUARE_LEFT  shift, and go to state 176

    $default  reduce using rule 91 (MORE_RECV_HD_ARRAY_DIM)

    MORE_RECV_HD_ARRAY_DIM  go to state 177


State 168

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   89 RECV_HD_ARRAY: ID SQUARE_LEFT EXP_R • SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM

    SQUARE_RIGHT  shift, and go to state 178
    LOR           shift, and go to state 79
    LAND          shift, and go to state 80
    BOR           shift, and go to state 81
    BXOR          shift, and go to state 82
    APSAND        shift, and go to state 83
    EQ            shift, and go to state 84
    NE            shift, and go to state 85
    LE            shift, and go to state 86
    GE            shift, and go to state 87
    LT            shift, and go to state 88
    GT            shift, and go to state 89
    PLUS          shift, and go to state 90
    MINUS         shift, and go to state 91
    STAR          shift, and go to state 92
    DIVIDE        shift, and go to state 93
    MOD           shift, and go to state 94


State 169

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   80 SEND_FUNC_ARGS: • COMMA EXP_R SEND_FUNC_ARGS
   80               | COMMA EXP_R • SEND_FUNC_ARGS
   81               | • %empty  [ROUND_RIGHT]

    COMMA   shift, and go to state 154
    LOR     shift, and go to state 79
    LAND    shift, and go to state 80
    BOR     shift, and go to state 81
    BXOR    shift, and go to state 82
    APSAND  shift, and go to state 83
    EQ      shift, and go to state 84
    NE      shift, and go to state 85
    LE      shift, and go to state 86
    GE      shift, and go to state 87
    LT      shift, and go to state 88
    GT      shift, and go to state 89
    PLUS    shift, and go to state 90
    MINUS   shift, and go to state 91
    STAR    shift, and go to state 92
    DIVIDE  shift, and go to state 93
    MOD     shift, and go to state 94

    $default  reduce using rule 81 (SEND_FUNC_ARGS)

    SEND_FUNC_ARGS  go to state 179


State 170

   78 FUNC_CALL: ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT •

    $default  reduce using rule 78 (FUNC_CALL)


State 171

   47 MORE_ARRAY_DIM: • SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   47               | SQUARE_LEFT EXP_R SQUARE_RIGHT • MORE_ARRAY_DIM
   48               | • %empty  [SEMICOLON, COMMA, DOT, ROUND_RIGHT, SQUARE_RIGHT, ASSIGN, LOR, LAND, BOR, BXOR, APSAND, EQ, NE, LE, GE, LT, GT, PLUS, MINUS, STAR, DIVIDE, MOD]

    SQUARE_LEFT  shift, and go to state 114

    $default  reduce using rule 48 (MORE_ARRAY_DIM)

    MORE_ARRAY_DIM  go to state 180


State 172

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   56 STATEMENT_WHILE: WHILE ROUND_LEFT EXP_R • ROUND_RIGHT WHILE_BODY

    ROUND_RIGHT  shift, and go to state 181
    LOR          shift, and go to state 79
    LAND         shift, and go to state 80
    BOR          shift, and go to state 81
    BXOR         shift, and go to state 82
    APSAND       shift, and go to state 83
    EQ           shift, and go to state 84
    NE           shift, and go to state 85
    LE           shift, and go to state 86
    GE           shift, and go to state 87
    LT           shift, and go to state 88
    GT           shift, and go to state 89
    PLUS         shift, and go to state 90
    MINUS        shift, and go to state 91
    STAR         shift, and go to state 92
    DIVIDE       shift, and go to state 93
    MOD          shift, and go to state 94


State 173

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   52 STATEMENT_IF: IF ROUND_LEFT EXP_R • ROUND_RIGHT STATEMENTS_BLOCK STATEMENT_ELSE

    ROUND_RIGHT  shift, and go to state 182
    LOR          shift, and go to state 79
    LAND         shift, and go to state 80
    BOR          shift, and go to state 81
    BXOR         shift, and go to state 82
    APSAND       shift, and go to state 83
    EQ           shift, and go to state 84
    NE           shift, and go to state 85
    LE           shift, and go to state 86
    GE           shift, and go to state 87
    LT           shift, and go to state 88
    GT           shift, and go to state 89
    PLUS         shift, and go to state 90
    MINUS        shift, and go to state 91
    STAR         shift, and go to state 92
    DIVIDE       shift, and go to state 93
    MOD          shift, and go to state 94


State 174

   77 STATEMENT_RETURN: RETURN EXP_R SEMICOLON •

    $default  reduce using rule 77 (STATEMENT_RETURN)


State 175

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   70 STATEMENT_ASSIGN: EXP_L ASSIGN EXP_R • SEMICOLON

    SEMICOLON  shift, and go to state 183
    LOR        shift, and go to state 79
    LAND       shift, and go to state 80
    BOR        shift, and go to state 81
    BXOR       shift, and go to state 82
    APSAND     shift, and go to state 83
    EQ         shift, and go to state 84
    NE         shift, and go to state 85
    LE         shift, and go to state 86
    GE         shift, and go to state 87
    LT         shift, and go to state 88
    GT         shift, and go to state 89
    PLUS       shift, and go to state 90
    MINUS      shift, and go to state 91
    STAR       shift, and go to state 92
    DIVIDE     shift, and go to state 93
    MOD        shift, and go to state 94


State 176

   18 EXP_R: • EXP_R LT EXP_R
   19      | • EXP_R LE EXP_R
   20      | • EXP_R GT EXP_R
   21      | • EXP_R GE EXP_R
   22      | • EXP_R NE EXP_R
   23      | • EXP_R EQ EXP_R
   24      | • EXP_R PLUS EXP_R
   25      | • EXP_R MINUS EXP_R
   26      | • EXP_R STAR EXP_R
   27      | • EXP_R DIVIDE EXP_R
   28      | • EXP_R MOD EXP_R
   29      | • EXP_R LOR EXP_R
   30      | • EXP_R LAND EXP_R
   31      | • EXP_R BOR EXP_R
   32      | • EXP_R BXOR EXP_R
   33      | • EXP_R APSAND EXP_R
   34      | • PLUS EXP_R
   35      | • MINUS EXP_R
   36      | • ROUND_LEFT EXP_R ROUND_RIGHT
   37      | • EXP_L
   38      | • APSAND EXP_L
   39      | • CONST_STRING
   40      | • NUMBER
   41      | • FUNC_CALL
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   49 NUMBER: • CONST_INTEGER
   50       | • CONST_BOOLEAN
   51       | • CONST_FLOAT
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT
   90 MORE_RECV_HD_ARRAY_DIM: SQUARE_LEFT • EXP_R SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM

    CONST_INTEGER  shift, and go to state 45
    CONST_FLOAT    shift, and go to state 46
    CONST_STRING   shift, and go to state 47
    CONST_BOOLEAN  shift, and go to state 48
    ID             shift, and go to state 49
    ROUND_LEFT     shift, and go to state 50
    APSAND         shift, and go to state 51
    PLUS           shift, and go to state 52
    MINUS          shift, and go to state 53

    EXP_R      go to state 184
    EXP_L      go to state 55
    HD_ARRAY   go to state 56
    NUMBER     go to state 57
    FUNC_CALL  go to state 58


State 177

   88 RECV_HD_ARRAY: ID SQUARE_LEFT SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM •

    $default  reduce using rule 88 (RECV_HD_ARRAY)


State 178

   89 RECV_HD_ARRAY: ID SQUARE_LEFT EXP_R SQUARE_RIGHT • MORE_RECV_HD_ARRAY_DIM
   90 MORE_RECV_HD_ARRAY_DIM: • SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM
   91                       | • %empty  [COMMA, ROUND_RIGHT]

    SQUARE_LEFT  shift, and go to state 176

    $default  reduce using rule 91 (MORE_RECV_HD_ARRAY_DIM)

    MORE_RECV_HD_ARRAY_DIM  go to state 185


State 179

   80 SEND_FUNC_ARGS: COMMA EXP_R SEND_FUNC_ARGS •

    $default  reduce using rule 80 (SEND_FUNC_ARGS)


State 180

   47 MORE_ARRAY_DIM: SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM •

    $default  reduce using rule 47 (MORE_ARRAY_DIM)


State 181

    6 STATEMENTS_BLOCK: • BEGIN STATEMENTS END
    7                 | • BEGIN END
   10 STATEMENT: • STATEMENT_VAR_DEF
   11          | • STATEMENT_ASSIGN
   12          | • STATEMENT_IF
   13          | • STATEMENT_WHILE
   14          | • STATEMENT_STRUCT_DEF
   15          | • STATEMENT_RETURN
   16          | • FUNC_CALL SEMICOLON
   17          | • SEMICOLON
   42 EXP_L: • ID
   43      | • ID DOT EXP_L
   44      | • HD_ARRAY
   45      | • HD_ARRAY DOT EXP_L
   46 HD_ARRAY: • ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_ARRAY_DIM
   52 STATEMENT_IF: • IF ROUND_LEFT EXP_R ROUND_RIGHT STATEMENTS_BLOCK STATEMENT_ELSE
   56 STATEMENT_WHILE: • WHILE ROUND_LEFT EXP_R ROUND_RIGHT WHILE_BODY
   56                | WHILE ROUND_LEFT EXP_R ROUND_RIGHT • WHILE_BODY
   57 WHILE_BODY: • STATEMENTS_BLOCK
   58           | • STATEMENT
   59 STATEMENT_VAR_DEF: • VAR_DEF_TYPE DECLARE_INITIALIZE DECLARE_MORE
   60                  | • VAR_DEF_TYPE DECLARE_NON_INITIALIZE DECLARE_MORE
   70 STATEMENT_ASSIGN: • EXP_L ASSIGN EXP_R SEMICOLON
   71 STATEMENT_STRUCT_DEF: • STRUCT ID BEGIN STRUCT_MEMBER_DEF MORE_STRUCT_MEMBER_DEF END SEMICOLON
   77 STATEMENT_RETURN: • RETURN EXP_R SEMICOLON
   78 FUNC_CALL: • ID ROUND_LEFT EXP_R SEND_FUNC_ARGS ROUND_RIGHT
   79          | • ID ROUND_LEFT ROUND_RIGHT
   92 DT_STRUCT: • STRUCT ID
   94 VAR_DEF_TYPE: • DT_INTEGER
   95             | • DT_FLOAT
   96             | • DT_BOOLEAN
   97             | • DT_STRUCT

    DT_INTEGER  shift, and go to state 1
    DT_BOOLEAN  shift, and go to state 2
    DT_FLOAT    shift, and go to state 3
    STRUCT      shift, and go to state 4
    WHILE       shift, and go to state 136
    IF          shift, and go to state 137
    RETURN      shift, and go to state 138
    ID          shift, and go to state 49
    SEMICOLON   shift, and go to state 139
    BEGIN       shift, and go to state 104

    STATEMENTS_BLOCK      go to state 186
    STATEMENT             go to state 187
    EXP_L                 go to state 143
    HD_ARRAY              go to state 56
    STATEMENT_IF          go to state 144
    STATEMENT_WHILE       go to state 145
    WHILE_BODY            go to state 188
    STATEMENT_VAR_DEF     go to state 146
    STATEMENT_ASSIGN      go to state 147
    STATEMENT_STRUCT_DEF  go to state 148
    STATEMENT_RETURN      go to state 149
    FUNC_CALL             go to state 150
    DT_STRUCT             go to state 11
    VAR_DEF_TYPE          go to state 12


State 182

    6 STATEMENTS_BLOCK: • BEGIN STATEMENTS END
    7                 | • BEGIN END
   52 STATEMENT_IF: IF ROUND_LEFT EXP_R ROUND_RIGHT • STATEMENTS_BLOCK STATEMENT_ELSE

    BEGIN  shift, and go to state 104

    STATEMENTS_BLOCK  go to state 189


State 183

   70 STATEMENT_ASSIGN: EXP_L ASSIGN EXP_R SEMICOLON •

    $default  reduce using rule 70 (STATEMENT_ASSIGN)


State 184

   18 EXP_R: EXP_R • LT EXP_R
   19      | EXP_R • LE EXP_R
   20      | EXP_R • GT EXP_R
   21      | EXP_R • GE EXP_R
   22      | EXP_R • NE EXP_R
   23      | EXP_R • EQ EXP_R
   24      | EXP_R • PLUS EXP_R
   25      | EXP_R • MINUS EXP_R
   26      | EXP_R • STAR EXP_R
   27      | EXP_R • DIVIDE EXP_R
   28      | EXP_R • MOD EXP_R
   29      | EXP_R • LOR EXP_R
   30      | EXP_R • LAND EXP_R
   31      | EXP_R • BOR EXP_R
   32      | EXP_R • BXOR EXP_R
   33      | EXP_R • APSAND EXP_R
   90 MORE_RECV_HD_ARRAY_DIM: SQUARE_LEFT EXP_R • SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM

    SQUARE_RIGHT  shift, and go to state 190
    LOR           shift, and go to state 79
    LAND          shift, and go to state 80
    BOR           shift, and go to state 81
    BXOR          shift, and go to state 82
    APSAND        shift, and go to state 83
    EQ            shift, and go to state 84
    NE            shift, and go to state 85
    LE            shift, and go to state 86
    GE            shift, and go to state 87
    LT            shift, and go to state 88
    GT            shift, and go to state 89
    PLUS          shift, and go to state 90
    MINUS         shift, and go to state 91
    STAR          shift, and go to state 92
    DIVIDE        shift, and go to state 93
    MOD           shift, and go to state 94


State 185

   89 RECV_HD_ARRAY: ID SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM •

    $default  reduce using rule 89 (RECV_HD_ARRAY)


State 186

   57 WHILE_BODY: STATEMENTS_BLOCK •

    $default  reduce using rule 57 (WHILE_BODY)


State 187

   58 WHILE_BODY: STATEMENT •

    $default  reduce using rule 58 (WHILE_BODY)


State 188

   56 STATEMENT_WHILE: WHILE ROUND_LEFT EXP_R ROUND_RIGHT WHILE_BODY •

    $default  reduce using rule 56 (STATEMENT_WHILE)


State 189

   52 STATEMENT_IF: IF ROUND_LEFT EXP_R ROUND_RIGHT STATEMENTS_BLOCK • STATEMENT_ELSE
   53 STATEMENT_ELSE: • ELSE STATEMENTS_BLOCK
   54               | • ELSE STATEMENT_IF
   55               | • %empty  [DT_INTEGER, DT_BOOLEAN, DT_FLOAT, STRUCT, WHILE, IF, RETURN, ID, SEMICOLON, END]

    ELSE  shift, and go to state 191

    $default  reduce using rule 55 (STATEMENT_ELSE)

    STATEMENT_ELSE  go to state 192


State 190

   90 MORE_RECV_HD_ARRAY_DIM: • SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM
   90                       | SQUARE_LEFT EXP_R SQUARE_RIGHT • MORE_RECV_HD_ARRAY_DIM
   91                       | • %empty  [COMMA, ROUND_RIGHT]

    SQUARE_LEFT  shift, and go to state 176

    $default  reduce using rule 91 (MORE_RECV_HD_ARRAY_DIM)

    MORE_RECV_HD_ARRAY_DIM  go to state 193


State 191

    6 STATEMENTS_BLOCK: • BEGIN STATEMENTS END
    7                 | • BEGIN END
   52 STATEMENT_IF: • IF ROUND_LEFT EXP_R ROUND_RIGHT STATEMENTS_BLOCK STATEMENT_ELSE
   53 STATEMENT_ELSE: ELSE • STATEMENTS_BLOCK
   54               | ELSE • STATEMENT_IF

    IF     shift, and go to state 137
    BEGIN  shift, and go to state 104

    STATEMENTS_BLOCK  go to state 194
    STATEMENT_IF      go to state 195


State 192

   52 STATEMENT_IF: IF ROUND_LEFT EXP_R ROUND_RIGHT STATEMENTS_BLOCK STATEMENT_ELSE •

    $default  reduce using rule 52 (STATEMENT_IF)


State 193

   90 MORE_RECV_HD_ARRAY_DIM: SQUARE_LEFT EXP_R SQUARE_RIGHT MORE_RECV_HD_ARRAY_DIM •

    $default  reduce using rule 90 (MORE_RECV_HD_ARRAY_DIM)


State 194

   53 STATEMENT_ELSE: ELSE STATEMENTS_BLOCK •

    $default  reduce using rule 53 (STATEMENT_ELSE)


State 195

   54 STATEMENT_ELSE: ELSE STATEMENT_IF •

    $default  reduce using rule 54 (STATEMENT_ELSE)
